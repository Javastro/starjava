%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (obscore.eps)
%%CreationDate: (2015-12-16T13:25:11+01:00)
%%BoundingBox: -0 -0 24 24
%%HiResBoundingBox: 0 0 24 24
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 24 24
userdict begin
DisplayImage
0 0
24 24
12
24 24
0
0
FEFEFEFEFEFEFEFEFEFBFAF4FEFEFEFEFEFEFEFEFEF2F0F5D4CCCBBAB4B3C8C5CADDD6D5E2E2E3
E2E2E3DDD6D5D0CED3CFD1CEEFF1EDFEF6F5FBFAF4F6FCFFF6FCFFFEFEFEFBFAF4FEFEFEFEFEFE
FBFAF4EFEEE2D5D9D4B3B5B0919296A1A6A9C1C8CAD3D9DCD3D9DCD5D9D4DBDFDADCE2E6E2E2E3
F7F1EFEFEEE2BBBDBA999EA1A9B5BDCED8E2DFEFF0F6FCFFFEFEFEE5DDDCB2B5AA797B78797B78
7A7E8282878A858A8CBED1D9DCE2E6DCE2E6DBDFDAE2E2E3E2E2E3E7EAE6EBEEEAE7EAE6F7F1EF
EEF4F79192965B66735165775570816E828FA9B5BD7C909DA9B5BD9FB5C39FB5C39DAABA959EA7
C0C9D4CED8E2DDD6D5E2E2E3DBDFDAE2E2E3E5DDDCEFEBF1E7EAE6E4EAEDF7F1EFE4EAEDE7E7F5
C4BCC3CED8E2A9B5BD6E828F5976862B516B1A4061113F652A466B28364A798EA1C4CED9CACDC9
D0CFC4E0D5CDDDD6D5DBDFDADCE2E6E2E2E3E2E2E3F7F1EFE7E7F5F2F0F5F2F0F5D0CED3E7E7F5
FEFEFEDDF1F99AB5C9113F651637640B2D5E1637642D425B9FB5C3C1C0CCD4CCCBDDCFC0DBD1C9
D0CED3DBDFDADBDFDAE2E2E3E2E2E3E7EAE6F7F1EFEFEBF1E7E7F5E2E2E3CED8E2FBFAF4F6FCFF
EAFAFB253D5B394D6859709D8CADC39FB5C3B5C3D4C8C5CAD2C3C4D0CFC4D0CFC4D5D9D4DDD6D5
E2E2E3DBDFDADCE2E6E2E2E3E7EAE6E4EAEDE4EAEDDFDEECD0CED3FBFAF4FBFAF4FEFEFE6F91A5
BDD8EFFEFEFEF6FCFFBBC1C4C1C0CCC8C5CACAC3C2CACDC9CFD1CEC8CED1D5D9D4DDD6D5E5DDDC
E2E2E3E2E2E3E0E0D4E4EAEDE2E2E3DDD6D5D4CCCBFBFAF4FBFAF4F6FCFFF4FAF4FEFEFEF4FAF4
F4FAF4D0CFC4BAB4B3C9B9BBC8C5CAD0CED3C8CED1CFD1CECFD1CED3D9DCD5D9D4D5D9D4DBDFDA
D3E3E4E2E2E3E5DDDCC8C5CAD3D9DCF6FCFFDEF8F6CED8E2F6FCFFFEFEFEFBFAF4FEF6F5EFEEE2
BAB4B3C9B9BBC3BCBBC2C4C1C7C9C5D0CED3CFD1CEC8CED1DDD6D5D3D9DCDDD6D5C8CED1BBC1C4
C4BCC3D0CED3C1CFE08CADC360A1B35590A9798EA1EEF4F7FEFEFEF6FCFFFEFEFEF7F1EFCAC3C2
BCB3ABBDBCB2C5C5BAC7C9C5D4CCCBD4CCCBC8CED1DDD6D5C2C4C1A3A5A1B6B9B5C1C0CC798EA1
496D8B4082AF4082AF587CAF253C545165779AB5C9DDF1F9EAFAFBF6FCFFF6FCFFF2F0F5DBDFDA
DBD1C9AAAFB3BBBDBABBBDBAAAAFB3BBC1C4BEC3BBB9C1B4BEC3BBBBC1C46D7E955077934984AC
568EBF85A4D646789F113F65113F65394D6859768694A8B6BED1D9D3E3E4EFF1EDF4FAF4FEFEFE
F6FCFFF2F0F5EFF1EDF7F1EFEBEEEAE4EAEDE4EAEDDDF1F9C1DBE1ABCBDBABCBDB8CADC3638EB2
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FF0000FF0000FFFFFFFF
0000FF0000FFFFFFFFFFFFFF0000FF0000FFFFFFFF0000FF0000FFFFFFFF0000FF0000FF0000FF
FFFFFF0000FF0000FFFFFFFFFFFFFF0000FF0000FF0000FFFFFFFF0000FFFFFFFF0000FFFFFFFF
0000FFFFFFFF0000FFFFFFFFFFFFFF0000FFFFFFFFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FF
FFFFFF0000FFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FF0000FF0000FFFFFFFF
0000FF0000FFFFFFFF0000FFFFFFFFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FF0000FFFFFFFF
FFFFFF0000FF0000FF0000FFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FFFFFFFFFFFFFF0000FF
FFFFFF0000FFFFFFFFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FF
FFFFFF0000FF0000FF0000FFFFFFFF0000FF0000FFFFFFFFFFFFFF0000FF0000FFFFFFFF0000FF
0000FFFFFFFF0000FF0000FF0000FFFFFFFF0000FFFFFFFF0000FFFFFFFF0000FF0000FFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
